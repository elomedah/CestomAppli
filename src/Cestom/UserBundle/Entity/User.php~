<?php
 
namespace Cestom\UserBundle\Entity;
 
use Doctrine\ORM\Mapping as ORM;
use FOS\UserBundle\Model\User as BaseUser;
 
use Vich\UploaderBundle\Mapping\Annotation as Vich;
use Symfony\Component\HttpFoundation\File\File;

/**
 * User
 *
 * @ORM\Table(name="FOSUSER")
 * @ORM\Entity
 * @Vich\Uploadable
 */
class User extends BaseUser
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @var string
     *
     * @ORM\Column(name="imageprofil", type="string", length=255)
     */
    private $imageprofil;

    /**
     * @var File
     *
	 * @Vich\UploadableField(mapping="utilisateur_image_profil", fileNameProperty="imageprofil")
     */
    private $fichierimageprofil;

    /**
     * @ORM\Column(name="misajour", type="datetime")
     *
     * @var \DateTime
     */
    private $misajour;


    /**
     * Get idmembre
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    public function __construct()
    {
		parent::__construct();
		$this->addRole('ROLE_USER');
		$this->misajour = new \DateTime();
    }

	
	/**
     * If manually uploading a file (i.e. not using Symfony Form) ensure an instance
     * of 'UploadedFile' is injected into this setter to trigger the  update. If this
     * bundle's configuration parameter 'inject_on_load' is set to 'true' this setter
     * must be able to accept an instance of 'File' as the bundle will inject one here
     * during Doctrine hydration.
     *
     * @param File|\Symfony\Component\HttpFoundation\File\UploadedFile $image
     */
    public function setFichierimageprofil(File $image = null)
    {
        $this->fichierimageprofil = $image;

        if ($image) {
            // It is required that at least one field changes if you are using doctrine
            // otherwise the event listeners won't be called and the file is lost
            $this->misajour = new \DateTime('now');
        }
    }
	

    /**
     * @return File
     */
    public function getFichierimageprofil()
    {
        return $this->fichierimageprofil;
    }

}
